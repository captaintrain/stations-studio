{"version":3,"sources":["stations-editor/tests/app.jshint.js","stations-editor/tests/components/create-pr.jshint.js","stations-editor/tests/components/station-autocomplete.jshint.js","stations-editor/tests/components/station-checkbox.jshint.js","stations-editor/tests/components/station-details.jshint.js","stations-editor/tests/components/station-map.jshint.js","stations-editor/tests/components/station-text-input.jshint.js","stations-editor/tests/components/user-navbar.jshint.js","stations-editor/tests/dummy/config/environment.js","stations-editor/tests/dummy/config/environment.jshint.js","stations-editor/tests/helpers/destroy-app.js","stations-editor/tests/helpers/destroy-app.jshint.js","stations-editor/tests/helpers/ember-power-select.js","stations-editor/tests/helpers/module-for-acceptance.js","stations-editor/tests/helpers/module-for-acceptance.jshint.js","stations-editor/tests/helpers/resolver.js","stations-editor/tests/helpers/resolver.jshint.js","stations-editor/tests/helpers/start-app.js","stations-editor/tests/helpers/start-app.jshint.js","stations-editor/tests/router.jshint.js","stations-editor/tests/routes/application.jshint.js","stations-editor/tests/routes/auth.jshint.js","stations-editor/tests/routes/changelog.jshint.js","stations-editor/tests/routes/index.jshint.js","stations-editor/tests/routes/login.jshint.js","stations-editor/tests/routes/station.jshint.js","stations-editor/tests/services/stations.jshint.js","stations-editor/tests/services/user.jshint.js","stations-editor/tests/test-helper.js","stations-editor/tests/test-helper.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('stations-editor/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/create-pr.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/create-pr.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/create-pr.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/station-autocomplete.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/station-autocomplete.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/station-autocomplete.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/station-checkbox.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/station-checkbox.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/station-checkbox.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/station-details.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/station-details.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/station-details.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/station-map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/station-map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/station-map.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/station-text-input.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/station-text-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/station-text-input.js should pass jshint.');\n  });\n});","define('stations-editor/tests/components/user-navbar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/user-navbar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/user-navbar.js should pass jshint.');\n  });\n});","define('stations-editor/tests/dummy/config/environment', ['exports'], function (exports) {\n    /* global ENV, environment */\n    if (environment === 'production') {\n        ENV.baseURL = '/stations-studio';\n    }\n});","define('stations-editor/tests/dummy/config/environment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - dummy/config/environment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dummy/config/environment.js should pass jshint.');\n  });\n});","define('stations-editor/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('stations-editor/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('stations-editor/tests/helpers/ember-power-select', ['exports', 'ember'], function (exports, _ember) {\n  exports.triggerKeydown = triggerKeydown;\n  exports.typeInSearch = typeInSearch;\n  exports.clickTrigger = clickTrigger;\n\n  // Helpers for integration tests\n\n  function typeText(selector, text) {\n    $(selector).val(text);\n    $(selector).trigger('input');\n  }\n\n  function triggerKeydown(domElement, k) {\n    var oEvent = document.createEvent(\"Events\");\n    oEvent.initEvent('keydown', true, true);\n    $.extend(oEvent, {\n      view: window,\n      ctrlKey: false,\n      altKey: false,\n      shiftKey: false,\n      metaKey: false,\n      keyCode: k,\n      charCode: k\n    });\n    _ember['default'].run(function () {\n      domElement.dispatchEvent(oEvent);\n    });\n  }\n\n  function typeInSearch(text) {\n    _ember['default'].run(function () {\n      typeText('.ember-power-select-search input, .ember-power-select-trigger-multiple-input', text);\n    });\n  }\n\n  function clickTrigger(scope) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var selector = '.ember-power-select-trigger';\n    if (scope) {\n      selector = scope + ' ' + selector;\n    }\n    var event = new window.Event('mousedown', { bubbles: true, cancelable: true, view: window });\n    Object.keys(options).forEach(function (key) {\n      return event[key] = options[key];\n    });\n    _ember['default'].run(function () {\n      return _ember['default'].$(selector)[0].dispatchEvent(event);\n    });\n  }\n\n  // Helpers for acceptance tests\n\n  exports['default'] = function () {\n    var isEmberOne = _ember['default'].VERSION.match(/1\\.13/);\n\n    _ember['default'].Test.registerAsyncHelper('selectChoose', function (app, cssPath, value) {\n      var id = find(cssPath).find('.ember-power-select-trigger').attr('class').match(/ember-power-select-trigger-ember(\\d+)/)[1];\n      // If the dropdown is closed, open it\n      if (_ember['default'].$('.ember-power-select-dropdown-ember' + id).length === 0) {\n        click(cssPath + ' .ember-power-select-trigger');\n      }\n\n      // Select the option with the given text\n      click('.ember-power-select-dropdown-ember' + id + ' .ember-power-select-option:contains(\"' + value + '\")');\n    });\n\n    _ember['default'].Test.registerAsyncHelper('selectSearch', function (app, cssPath, value) {\n      var id = find(cssPath).find('.ember-power-select-trigger').attr('class').match(/ember-power-select-trigger-ember(\\d+)/)[1];\n      var isMultipleSelect = _ember['default'].$(cssPath + ' .ember-power-select-trigger-multiple-input').length > 0;\n\n      var dropdownIsClosed = _ember['default'].$('.ember-power-select-dropdown-ember' + id).length === 0;\n      if (dropdownIsClosed) {\n        click(cssPath + ' .ember-power-select-trigger');\n      }\n\n      if (isMultipleSelect) {\n        fillIn(cssPath + ' .ember-power-select-trigger-multiple-input', value);\n        if (isEmberOne) {\n          triggerEvent(cssPath + ' .ember-power-select-trigger-multiple-input', 'input');\n        }\n      } else {\n        fillIn('.ember-power-select-search input', value);\n        if (isEmberOne) {\n          triggerEvent('.ember-power-select-dropdown-ember' + id + ' .ember-power-select-search input', 'input');\n        }\n      }\n    });\n  };\n});","define('stations-editor/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'stations-editor/tests/helpers/start-app', 'stations-editor/tests/helpers/destroy-app'], function (exports, _qunit, _stationsEditorTestsHelpersStartApp, _stationsEditorTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _stationsEditorTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _stationsEditorTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('stations-editor/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('stations-editor/tests/helpers/resolver', ['exports', 'ember/resolver', 'stations-editor/config/environment'], function (exports, _emberResolver, _stationsEditorConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _stationsEditorConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _stationsEditorConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('stations-editor/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('stations-editor/tests/helpers/start-app', ['exports', 'ember', 'stations-editor/app', 'stations-editor/config/environment'], function (exports, _ember, _stationsEditorApp, _stationsEditorConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _stationsEditorConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _stationsEditorApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('stations-editor/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('stations-editor/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('stations-editor/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('stations-editor/tests/routes/auth.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/auth.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/auth.js should pass jshint.');\n  });\n});","define('stations-editor/tests/routes/changelog.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/changelog.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/changelog.js should pass jshint.');\n  });\n});","define('stations-editor/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('stations-editor/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass jshint.');\n  });\n});","define('stations-editor/tests/routes/station.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/station.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/station.js should pass jshint.');\n  });\n});","define('stations-editor/tests/services/stations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/stations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/stations.js should pass jshint.');\n  });\n});","define('stations-editor/tests/services/user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/user.js should pass jshint.');\n  });\n});","define('stations-editor/tests/test-helper', ['exports', 'stations-editor/tests/helpers/resolver', 'ember-qunit'], function (exports, _stationsEditorTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_stationsEditorTestsHelpersResolver['default']);\n});","define('stations-editor/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('stations-editor/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}